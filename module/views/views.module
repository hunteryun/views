<?php

use Hunter\Core\Templating\Blade\BladeCompiler;

/**
 * get all views
 */
function views_get_all() {
  $list = array();
  $query = db_select('variable', 'v');
  $query->fields('v', array('value'));
  $query->condition('name', 'views.view.%', 'LIKE');
  $query->orderBy('name');
  $result = $query->execute()->fetchCol();

  foreach ($result as $item) {
    $list[] = unserialize($item);
  }

  return $list;
}

/**
 * get all templates
 */
function views_get_templates() {
  $list = array();
  $result = db_select('variable', 'v')
  ->fields('v')
  ->condition('name', 'views-view-%', 'LIKE')
  ->orderBy('name')
  ->execute()->fetchAllAssoc('name');

  foreach ($result as $name => $item) {
    $list[$name] = unserialize($item->value);
  }

  return $list;
}

/**
 * get view by name
 */
 function get_view_byname($name) {
     $view = db_select('variable', 'v')
       ->fields('v', array('value'))
       ->condition('name', $name)
       ->execute()
       ->fetchField();

     return unserialize($view);
 }


function _views_internal_tables() {
  if (module_exists('category')) {
    $tables['category'] = array(
      'name' => 'category',
      'provider' => 'internal',
      'join' => array(
        'left' => array(
          'table' => 'news',
          'field' => 'nid'
        ),
        'right' => array(
          'field' => 'nid'
        )
      ),
      'fields' => array(
        'cid' => array(
          'name' => 'Cid',
          'help' => 'The category ID.',
          'sortable' => true,
          'filter_type' => 'number',
        ),
        'name' => array(
          'name' => 'Category Name',
          'sortable' => true,
          'filter_type' => 'string',
        ),
      )
    );
  }

  $tables['users'] = array(
    'name' => 'users',
    'provider' => 'internal', // won't show up in external list.
    'join' => array(
      'left' => array(
        'table' => 'news',
        'field' => 'uid'
      ),
      'right' => array(
        'field' => 'uid'
      ),
    ),
    'fields' => array(
      'uid' => array(
        'name' => 'Uid',
        'help' => 'The user ID.',
        'sortable' => true,
        'filter_type' => 'number',
      ),
      'name' => array(
        'name' => 'User Name',
        'sortable' => true,
        'filter_type' => 'string',
      ),
      'email' => array(
        'name' => 'User Email',
        'sortable' => true,
        'filter_type' => 'string',
       ),
      'status' => array(
        'name' => 'User Status',
        'sortable' => true,
        'filter_type' => 'yes-no',
      ),
      'avatar' => array(
        'name' => 'User Avatar',
      ),
      'created' => array(
        'name' => 'User created',
        'sortable' => true,
        'sorttype' => 'date',
        'filter_type' => 'number',
      ),
      'accessed' => array(
        'name' => 'User accessed',
        'sortable' => true,
        'sorttype' => 'date',
        'filter_type' => 'number',
      )
    ),
  );

  $tables['users_roles'] = array(
    'name' => 'users_role',
    'provider' => 'internal', // won't show up in external list.
    'join' => array(
      'left' => array(
        'table' => 'News',
        'field' => 'uid'
      ),
      'right' => array(
        'field' => 'uid'
      ),
    ),
    'fields' => array(
      'name' => array(
        'name' => 'Node Author Name',
        'sortable' => true,
        'uid' => 'uid',
        'filter_type' => 'string',
      ),
    )
  );

  return $tables;
}

function _views_get_tables() {
  global $VIEWS_TABLES, $app;

  if (!$VIEWS_TABLES) {
    $VIEWS_TABLES = array_merge($app->getModuleHandle()->invokeAll('views_tables'), _views_internal_tables());
  }
  return $VIEWS_TABLES;
}

/**
 * Embed a view using a PHP snippet.
 */
function views_get_view($name, $preview = false) {
  if($preview){
    $view = variable_get('views_view_temp_'.$name);
  }else {
    $view = variable_get('views_view_final_'.$name);
  }

  if(isset($view['view_query']) && isset($view['view_template'])){
    $result = db_query($view['view_query'], $view['view_query_values'])->fetchAll();

    if($result) {
      $output = theme()->render($view['view_template'], array('viewdata' => $result));
      return $output;
    }
  }
  return false;
}
